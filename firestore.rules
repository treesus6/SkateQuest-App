// Suggested Firestore rules for SkateQuest (adapt to your DB structure)
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      // Allow users to update their own profile, streak, and lastCompleted
      // XP updates should ideally be done server-side, but allow for development
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    match /challenges/{challengeId} {
      allow read: if true;
      allow create: if request.auth != null;
      // Allow updates for challenge completion and status changes
      allow update: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }

    match /spots/{spotId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
    }

    // Allow reading challenge proofs
    match /challenges/{challengeId}/proofs/{proofId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Deny all other paths by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
